const Discord = require('discord.js')
const nekos = require('nekos.life');
const fs = require("fs");
const {CommandCooldown, msToMinutes} = require('discord-command-cooldown');
const ms = require('ms');
const { Client, Intents, Permission, GatewayIntentBits,  Args, Add, MessageButton, MessageActionRow, MessageEmbed, MessageCollector, MessageSelectMenu, ActionRowBuilder, Modal, TextInputBuilder, TextInputStyle, TextChannel} = require('discord.js');
const users = require('./users.json')
const { QuickDB } = require("quick.db");
const botSettings = require('./settings.json')

const neko = new nekos();
const db = new QuickDB();
const earnCashCommandCooldown = new CommandCooldown('earnCash', ms('6h'));
const collectedCommandCooldown = new CommandCooldown('collected', ms('12h'));

const discord_jsVersion = '13.1.0'; // Write in this const version discord.js –∏–∑ ./package.json !
const prefix = botSettings.prefix;
const token = botSettings.token;
/* 
When migrating to a new version of discord.js, replace Discord.MessageEmbed with Discord.EmbedConstructor
In case of questions, please contact YaFlay#3161 / https://t.me/bebra_yaflay
*/
// Bot require to rewrite this
console.log(discord_jsVersion)
if (discord_jsVersion >= '13.1.0' ){
  const {IntentsBitField, GatewayIntentBits } = require('discord.js')
  const myIntents = new IntentsBitField();
  myIntents.add(IntentsBitField.Flags.GuildPresences, IntentsBitField.Flags.GuildMembers);
}else{
    var intents= [
      Intents.FLAGS.GUILDS,
      Intents.FLAGS.GUILD_MESSAGES, 
      Intents.FLAGS.DIRECT_MESSAGES, 
      Intents.FLAGS.GUILD_MESSAGE_REACTIONS, 
      Intents.FLAGS.GUILD_MESSAGE_TYPING, 
      Intents.FLAGS.DIRECT_MESSAGES, 
      Intents.FLAGS.DIRECT_MESSAGE_REACTIONS, 
      Intents.FLAGS.DIRECT_MESSAGE_TYPING, 
      Intents.FLAGS.GUILD_MEMBERS, 
      Intents.FLAGS.GUILD_PRESENCES, 
      Intents.FLAGS.GUILD_BANS, 
      Intents.FLAGS.GUILD_VOICE_STATES,
      Intents.FLAGS.GUILDS ]
}
// Connect
const client = new Client({ intents: [GatewayIntentBits.Guilds,
  GatewayIntentBits.GuildMessages,
  GatewayIntentBits.MessageContent,
  GatewayIntentBits.GuildMembers,] })
client.on('ready', async () => {
console.log(`${client.user.tag} –∑–∞–ø—É—â–µ–Ω!`);
client.user.setStatus("online");
if (discord_jsVersion >= '13.1.0' ){
  client.user.setActivity(`!–ø–æ–º–æ—â—å`, { type: Discord.ActivityType.Watching })
}else{
  client.user.setActivity(`!–ø–æ–º–æ—â—å`, { type: "WATCHING" })
}
});




client.on('messageCreate', async message => {
  if (!message.author.bot) {
    if (message.guild.id == 780911193329762305) { 
      let user = users[message.author.id];
      if (!user) {
        users[message.author.id] = {
            coin: 0,
            lvl: 0,
            xp: 0
          }
      } else {
        let giveXp = Math.floor(Math.random() * 5) + 1;
        let giveCoin = Math.floor(Math.random() * 10) + 1;
        let userInfo = users[message.author.id];
        userInfo.xp = userInfo.xp + giveXp
        userInfo.coin = userInfo.coin + giveCoin
        if(userInfo.xp > 100) {
            userInfo.lvl++
            userInfo.xp = 0
            userInfo.coin = userInfo.coin + 50
            let lvlAlert = new Discord.EmbedConstructor()
              .setTitle('**Koshki.bot ALERT**')
              .setDescription(`üéâ <@${message.author.id}>, —É –≤–∞—Å –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!\n**–í–∞—à —É—Ä–æ–≤–µ–Ω—å:** ${userInfo.lvl}`)
              .setColor('#2f3136')
            const channel = client.channels.cache.get('796068482923233300')
            channel.send({content:`<@${message.author.id}>` , embeds: [lvlAlert]});

        }
        if(userInfo.lvl == 5) {
          message.member.roles.add('798948821613805609')
        }
        if(userInfo.lvl == 15) {
          message.member.roles.add('798948836064231464')
        }
        if(userInfo.lvl == 25) {
          message.member.roles.add('798949449594175488')
        }
        if(userInfo.lvl == 35) {
          message.member.roles.add('798949497954238564')
        }
        if(userInfo.lvl == 40) {
          message.member.roles.add('810206229275475998')
        }
        if(userInfo.lvl == 50) {
          message.member.roles.add('798949600601571339')
        }
      }
    }
  }
})

//–†–∞–±–æ—Ç–∞ —Å –∑–∞–ø–∏—Å—å—é –¥–∞–Ω–Ω—ã—Ö
setInterval(function usersGet() {
  fs.writeFileSync('./users.json', JSON.stringify(users, null, "\t"));
}, 2000);

//–ö–æ–º–∞–Ω–¥—ã
client.on('messageCreate', async message => {
  //–†–æ–ª–∏ 
  if (message.content.startsWith(`${prefix}—Ä–æ–ª–∏`)) {
    message.delete()
    if (!message.author.id === '852617513070231593') return;

    let roleemb = new Discord.EmbedConstructor()
    .setTitle('–í—ã–±–µ—Ä–∏—Ç–µ –ì–µ–Ω–¥–µ—Ä')
    .setDescription('–í –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≥–µ–Ω–¥–µ—Ä. **–ï—Å—Ç—å 3 –≥–µ–Ω–¥–µ—Ä–∞ –Ω–∞ –≤—ã–±–æ—Ä:**\n\n‚Ä¢ –ö–æ—à–∫–æ–º–∞–ª—å—á–∏–∫ ‚Äî :male_sign:\n‚Ä¢ –ö–æ—à–∫–æ—Ç—Ä–∞–ø ‚Äî :restroom:\n‚Ä¢ –ö–æ—à–∫–æ–¥–µ–≤–æ—á–∫–∞ ‚Äî :female_sign:')
    .setColor('#2f3136')
    .setImage('https://media.discordapp.net/attachments/797411622313263104/866014973742546994/20210717_205212.png')

    let rolebutton = new MessageActionRow()
    .addComponents(
      new MessageButton()
      .setCustomId('catboy')
      .setLabel('–ö–æ—à–∫–æ–º–∞–ª—å—á–∏–∫')
      .setEmoji('‚ôÇÔ∏è')
      .setStyle('SUCCESS'),
      new MessageButton()
      .setCustomId('catgirl')
      .setLabel('–ö–æ—à–∫–æ–¥–µ–≤–æ—á–∫–∞')
      .setEmoji('‚ôÄÔ∏è')
      .setStyle('SUCCESS'),
      new MessageButton()
      .setCustomId('catrap')
      .setLabel('–ö–æ—à–∫–æ—Ç—Ä–∞–ø')
      .setEmoji('üöª')
      .setStyle('SUCCESS')
    )

    message.channel.send({ embeds: [roleemb], components: [rolebutton] })
  }

  //–ü—Ä–æ—Ñ–∏–ª—å
  if (message.content.startsWith(`${prefix}–ø—Ä–æ—Ñ–∏–ª—å`) || message.content.startsWith(`${prefix}–ø–∞—Å–ø–æ—Ä—Ç`) || message.content.startsWith(`${prefix}profile`) || message.content.startsWith(`${prefix}prof`)) {
message.delete()
  let userInfo = users[message.author.id];
  const profile = new Discord.EmbedConstructor()
    .setColor('#fdbaba')
    .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å ${message.author.username}`)
    .setDescription('**–í–∞—à –±–∞–ª–∞–Ω—Å:** '+ userInfo.coin + 'ü™ô' +`\n**–í–∞—à —É—Ä–æ–≤–µ–Ω—å:** `+ userInfo.lvl + `\n**–í–∞—à –•–ü:** `+ userInfo.xp)
  message.channel.send({ embeds: [profile] });
} //–ê–≤–∞—Ç–∞—Ä–∫–∞

if (message.content.startsWith(`${prefix}–∞–≤–∞—Ç–∞—Ä–∫–∞`)) {
  message.delete()
  if (!message.mentions.users.size) {
    const avatarAuthor = new Discord.EmbedConstructor()
        .setTitle(`–ê–≤–∞—Ç–∞—Ä–∫–∞ -> ${message.author.username}`)
        .setColor('#fdbaba')
        .setImage(message.author.displayAvatarURL({ format: 'png' }));
    return message.channel.send({ embeds: [avatarAuthor] });
    }
    let mention = message.mentions.members.first();
    const avatarMention = new Discord.EmbedConstructor()
        .setTitle(`–ê–≤–∞—Ç–∞—Ä–∫–∞ -> ${message.mentions.users.first().username}`)
        .setColor('#fdbaba')
        .setImage(mention.user.displayAvatarURL({ format: 'png' }));
    return message.channel.send({ embeds: [avatarMention] });
} //–ü–æ–º–æ—â—å


 if (message.content.startsWith(`${prefix}–ø–æ–º–æ—â—å`) || message.content.startsWith(`${prefix}help`)) {
  if (!message.channel.name === 'DM') return message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞!")

    const help = new Discord.EmbedConstructor()
      .setTitle('–ö–æ–º–∞–Ω–¥—ã Koshki.Fun')
      .setColor('#fdbaba')
      .setDescription('üò∏ **–í–µ—Å—ë–ª–æ–µ**\n`!–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å @user` `!–æ–±–Ω—è—Ç—å @user` `!—É–¥–∞—Ä–∏—Ç—å @user` `!–ø–æ–≥–ª–∞–¥–∏—Ç—å @user` `!–∞–≤–∞—Ç–∞—Ä–∫–∞ @user` `!–∫–æ—Ç–∏–∫`\n\n<:catcoin:956825772407025714> **–≠–∫–æ–Ω–æ–º–∏–∫–∞**\n`!—Ä–∞–±–æ—Ç–∞` `!–º–∞–≥–∞–∑–∏–Ω` `!–ø—Ä–æ—Ñ–∏–ª—å`')
    message.channel.send({ embeds: [help] });
} //–†–∞–±–æ—Ç–∞ 


if (message.content.startsWith(`${prefix}—Ä–∞–±–æ—Ç–∞`) || message.content.startsWith(`${prefix}work`)) {
  var userCooldowned = await earnCashCommandCooldown.getUser(message.author.id);
  if (!userCooldowned) {
    let random = Math.floor(Math.random() * 250) + 50;
    let userInfo = users[message.author.id];
    const workEmbed = new Discord.EmbedConstructor()
      .setTitle('–£—Å–ø–µ—Ö!')
      .setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–ª–∏ –±—É—Ç—ã–ª–∫–∏ —Å —É–ª–∏—Ü—ã –∏ –ø–æ–ª—É—á–∏–ª–∏ ${random}<:catcoin:956825772407025714>!`)
      .setColor('#82eb7e')
    // .setFooter({ text: `Nickname: ${message.author.username}`, iconURL: `${message.author.displayAvatarURL({ format: 'png' })}`})
    message.channel.send({ embeds: [workEmbed] })
    userInfo.coin = userInfo.coin + random
    await earnCashCommandCooldown.addUser(message.author.id); // Cooldown user again
  } else {
    let timeLeft = msToMinutes(userCooldowned.msLeft, false); // False for excluding '0' characters for each number < 10
    message.reply(`–í–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å ${ timeLeft.hours + ' —á–∞—Å–æ–≤, ' + timeLeft.minutes + ' –º–∏–Ω—É—Ç, ' + timeLeft.seconds + ' —Å–µ–∫—É–Ω–¥'}, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤–Ω–æ–≤—å!`);
  }
}

//–û–±–Ω—è—Ç—å
if (message.content.startsWith(`${prefix}–æ–±–Ω—è—Ç—å`)) { 
  message.delete()
  let author = message.author.id 
  let mention = message.mentions.users.first();

  if (!mention) return message.channel.send('–ù—É–∂–Ω–æ —É–ø–æ–º—è–Ω—É—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, —á—Ç–æ–±—ã –µ–≥–æ/–µ—ë –æ–±–Ω—è—Ç—å.');
   async function ping() {

  let GIF = await neko.hug();

  const hug = new Discord.EmbedConstructor()
       .setDescription(`<@${author}> –æ–±–Ω—è–ª(-–∞) <@${mention.id}>`)
       .setImage(GIF.url)
       .setColor('#fdbaba')
      message.channel.send({ embeds: [hug] })
 }
 ping();
} // –ü–æ–≥–ª–∞–¥–∏—Ç—å
  if (message.content.startsWith(`${prefix}–ø–æ–≥–ª–∞–¥–∏—Ç—å`)) {
  message.delete()
  let author = message.author.id 
  let mention = message.mentions.users.first();

  if (!mention) return message.channel.send('–ù—É–∂–Ω–æ —É–ø–æ–º—è–Ω—É—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, —á—Ç–æ–±—ã –µ–≥–æ/–µ—ë –ø–æ–≥–ª–∞–¥–∏—Ç—å.');

  async function ping() {
    let GIF = await neko.pat();

    const pat = new Discord.EmbedConstructor()
    .setDescription(`<@${author}> –ø–æ–≥–ª–∞–¥–∏–ª(-–∞) <@${mention.id}>`)
    .setImage(GIF.url)
    .setColor('#fdbaba')
    message.channel.send({ embeds: [pat] })
  }
  ping();
}
//–£–¥–∞—Ä–∏—Ç—å
if (message.content.startsWith(`${prefix}—É–¥–∞—Ä–∏—Ç—å`)) {
  message.delete()
  let author = message.author.id 
  let mention = message.mentions.users.first();

  if (!mention) return message.channel.send('–ù—É–∂–Ω–æ —É–ø–æ–º—è–Ω—É—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, —á—Ç–æ–±—ã –µ–≥–æ/–µ—ë —É–¥–∞—Ä–∏—Ç—å.');

  async function ping() {
    let GIF = await neko.slap();

    const slap = new Discord.EmbedConstructor()
    .setDescription(`<@${author}> —É–¥–∞—Ä–∏–ª(-–∞) <@${mention.id}>`)
    .setImage(GIF.url)
    .setColor('#fdbaba')
    message.channel.send({ embeds: [slap] })
  }
  ping();
}
//–ö–æ—Ç–∏–∫
  if (message.content.startsWith(`${prefix}–∫–æ—Ç–∏–∫`)) {
    message.delete()
  async function cat() {
          const GIF = await neko.meow();
          const cat = new Discord.EmbedConstructor()
          .setColor('#fdbaba')
          .setDescription(`<@${message.author.id }> –¥–µ—Ä–∂–∏ —Ä–∞–Ω–¥–æ–º–Ω—É—é GIF/–ü–∏–∫—á—É –∫–æ—Ç–∏–∫–∞ <3`)
          .setImage(GIF.url)
          message.channel.send({ embeds: [cat] })
          }
          cat();
  } //–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å
   if (message.content.startsWith(`${prefix}–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å`)) {
    message.delete()
    let author = message.author.id 
    let mention = message.mentions.users.first();

    if (!mention) return message.channel.send('–ù—É–∂–Ω–æ —É–ø–æ–º—è–Ω—É—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, —á—Ç–æ–±—ã –µ–≥–æ/–µ—ë –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å.');

    async function ping() {
      let GIF = await neko.kiss();

      const kiss = new Discord.EmbedConstructor()
      .setDescription(`<:kiss:958359400819589170> <@${author}> –ø–æ—Ü–µ–ª–æ–≤–∞–ª(-–∞) <@${mention.id}>`)
      .setImage(GIF.url)
      .setColor('#fdbaba')
      message.channel.send({ embeds: [kiss] })
    }
    ping();
  }})


  // –†–∞–±–æ—Ç—ã —É–¥–∞–ª–µ–Ω—ã –∑–∞ –Ω–µ–Ω–∞–¥–æ–±–Ω–æ—Å—Ç—å—é. –§—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–Ω—è–ª Aoyo –±–æ—Ç. –ë–µ–∫–∞–ø –ª–µ–∂–∏—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (smb: or /home/yaflay/)discord/index.js 


//–ú–∞–≥–∞–∑–∏–Ω
client.on('messageCreate', message => {
  if (message.content.startsWith(`${prefix}–º–∞–≥–∞–∑–∏–Ω`)) {
    message.delete()

  const shop = new Discord.EmbedConstructor()
  .setTitle('üõí –ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π üõí')
  .setDescription('`–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ä–æ–ª—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ`\n\n**1.000 <:catcoin:956825772407025714> - –ö–∏—Å—è**\n–ü—Ä–∏ –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤–∞–º –≤—ã–¥–∞–µ—Ç—Å—è:\n- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å 50 <:catcoin:956825772407025714> –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤\n- –†–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–¥–µ–ª—è—Ç—Å—è —Å–ø—Ä–∞–≤–∞ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n**5.000 <:catcoin:956825772407025714> - –°—Ç–∞—Ä—à–∞—è –ö–∏—Å—è**\n–ü—Ä–∏ –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤–∞–º –≤—ã–¥–∞–µ—Ç—Å—è:\n- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å 100 <:catcoin:956825772407025714> –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤\n- –†–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–¥–µ–ª—è—Ç—Å—è —Å–ø—Ä–∞–≤–∞ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n*–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å—Ç–∞—Ä–æ–π —Ä–æ–ª–∏ - –æ—Å—Ç–∞—é—Ç—Å—è.*')
  .setColor('#fdbaba')
    
  const magaz = new MessageActionRow()
      .addComponents(
        new MessageButton()
          .setCustomId('kicya')
          .setLabel('–ö–∏—Å—è')
          .setStyle('SECONDARY')
          .setEmoji('797293706678894592'),
          new MessageButton()
          .setCustomId('oldkicya')
          .setLabel('–°—Ç–∞—Ä—à–∞—è –ö–∏—Å—è')
          .setStyle('SECONDARY')
          .setEmoji('805201954741551134'),
      );
      message.channel.send({ embeds: [shop], components: [magaz] });
  }
});

      client.on('interactionCreate', async (interaction) => {
        if(interaction.customId === 'kicya'){
          if(!interaction.member.roles.cache.has('780912227862577203')){
            let userInfo = users[interaction.member.user.id]
            if (userInfo.coin >= 1000) {
           await interaction.member.roles.add('780912227862577203')
            interaction.reply({ content: '–ì–æ—Ç–æ–≤–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ä–æ–ª—å: <@&780912227862577203>', ephemeral: true })
            userInfo.coin = userInfo.coin - 1000
            } else {
              interaction.reply({ content: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!', ephemeral: true })
            }
        } else {
          interaction.reply({ content: '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å: <@&780912227862577203>', ephemeral: true })
        }
      }
       if(interaction.customId === 'oldkicya'){
          if(!interaction.member.roles.cache.has('780912295412629517')){
            let userInfo = users[interaction.member.user.id]
            if (userInfo.coin >= 5000) {
           await interaction.member.roles.add('780912295412629517')
            interaction.reply({ content: '–ì–æ—Ç–æ–≤–æ! –í–∞–º –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å <@&780912295412629517>', ephemeral: true })
            userInfo.coin = userInfo.coin - 5000
            } else {
              interaction.reply({ content: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!', ephemeral: true })
            }
        } else {
          interaction.reply({ content: '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å: <@&780912295412629517>', ephemeral: true })
        }
      }
      })

client.on('messageCreate', async message => {
  if (message.content.startsWith(`${prefix}–±–æ–Ω—É—Å`) || message.content.startsWith(`${prefix}collect`)) { 
    var userCooldownedCollect = await collectedCommandCooldown.getUser(message.author.id);
    if (!userCooldownedCollect) {
      if (message.member.roles.cache.some(r=>["[üò∫] –∫–æ—Ç—ë–Ω–æ–∫"].includes(r.name))) {
        let userInfo = users[message.author.id];
        const collectSmallMonkey = new Discord.EmbedConstructor()
        .setTitle('–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É!')
        .setDescription('<@&780912153536233501> | 50 <:catcoin:956825772407025714>')
        .setColor('#82eb7e')
        .setFooter({ text: `${message.author.username}`, iconURL: `${message.author.displayAvatarURL({ format: 'png' })}`})
        message.channel.send({ embeds: [collectSmallMonkey] })
  
      userInfo.coin = userInfo.coin + 50
      await collectedCommandCooldown.addUser(message.author.id); // Cooldown user again
      } if (message.member.roles.cache.some(r=>["[üêà] –∫–∏—Å—è"].includes(r.name))) {
        let userInfo = users[message.author.id];
        const collectMonkey = new Discord.EmbedConstructor()
        .setTitle('–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É!')
        .setDescription('<@&780912227862577203> | 100 <:catcoin:956825772407025714>')
        .setColor('#82eb7e')
        .setFooter({ text: `${message.author.username}`, iconURL: `${message.author.displayAvatarURL({ format: 'png' })}`})
        message.channel.send({ embeds: [collectMonkey] })
  
      userInfo.coin = userInfo.coin + 100
      await collectedCommandCooldown.addUser(message.author.id); // Cooldown user again 
      } if (message.member.roles.cache.some(r=>["[üòª] —Å—Ç–∞—Ä—à–∞—è –∫–∏—Å—è"].includes(r.name))) {
        let userInfo = users[message.author.id];
        const collectOldMonkey = new Discord.EmbedConstructor()
        .setTitle('–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É!')
        .setDescription('<@&780912295412629517> | 150 <:catcoin:956825772407025714>')
        .setColor('#82eb7e')
        .setFooter({ text: `${message.author.username}`, iconURL: `${message.author.displayAvatarURL({ format: 'png' })}`})
        message.channel.send({ embeds: [collectOldMonkey] })
  
      userInfo.coin = userInfo.coin + 150
      await collectedCommandCooldown.addUser(message.author.id); // Cooldown user again 
      }
    } else {
      let timeLeft = msToMinutes(userCooldownedCollect.msLeft, false); // False for excluding '0' characters for each number < 10
      message.reply(`–í–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å ${ timeLeft.hours + ' —á–∞—Å–æ–≤, ' + timeLeft.minutes + ' –º–∏–Ω—É—Ç, ' + timeLeft.seconds + ' —Å–µ–∫—É–Ω–¥'}, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤–Ω–æ–≤—å!`);
    }
  } 
})


//–í–æ–π—Å
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –≤–æ–π—Å –∫–∞–Ω–∞–ª–∞ —É–¥–∞–ª–µ–Ω–æ –∑–∞ –Ω–µ–Ω–∞–¥–æ–±–Ω–æ—Å—Ç—å—é. –§—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–Ω—è–ª Aoyo –±–æ—Ç. –ë–µ–∫–∞–ø –ª–µ–∂–∏—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (smb: or /home/yaflay/)discord/index.js 

client.on('interactionCreate', async interaction => {
  if (interaction.customId === 'rename'){
    const Modal = new Modal()
			.setCustomId('renameModal')
			.setTitle('–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã');
    const name = new TextInputBuilder()
  		.setCustomId('name')
  		.setLabel("–ö–∞–∫–æ–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ?")
  		.setStyle('SHORT');

		const firstActionRow = new MessageActionRow().addComponents(name);
		Modal.addComponents(firstActionRow);

		await interaction.showModal(Modal);
  } if (interaction.customId === 'renameModal'){
    const newname = interaction.fields.getTextInputValue('name')
    const oldname = await db.get(`voice_${interaction.user.id}`)

    if (interaction.member.voice.channelId){
      const voiceid = interaction.member.voice.channelId
      const channel = interaction.guild.channels.cache.get(voiceid)
      if (channel.name === oldname){
        db.set(`voice_${interaction.user.id}`, newname)
        channel.edit({
          name: `${newname}`,
          permissionOverwrites: [
            {
              id: interaction.user.id,
              deny: ["MANAGE_CHANNELS", "MUTE_MEMBERS", "DEAFEN_MEMBERS"],
            },
            {
              id: interaction.guild.roles.everyone,
              deny: ['MANAGE_CHANNELS'],
            },
          ],
        })
        interaction.reply({ content: ':white_check_mark: –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã!', ephemeral: true })
      }
    } else {
      interaction.reply({ content: '‚ö†Ô∏è –£–ø—Å.. –ö–∞–∂–µ—Ç—Å—è —É –≤–∞—Å –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã.', ephemeral: true })
    }
  } if (interaction.customId === 'limit'){
    const Modals = new Modal()
			.setCustomId('limitModal')
			.setTitle('–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–Ω–∞—Ç—ã');
    const max = new TextInputBuilder()
		.setCustomId('max')
		.setLabel("–ö–∞–∫–æ–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?")
		.setStyle('SHORT');

		const firstActionRow = new MessageActionRow().addComponents(max);
		Modal.addComponents(firstActionRow);

		await interaction.showModal(Modal);
  } if (interaction.customId === 'limitModal'){
    const newlimit = interaction.fields.getTextInputValue('max')
    const name = await db.get(`voice_${interaction.user.id}`)
    if (interaction.member.voice.channelId){
      const voiceid = interaction.member.voice.channelId
      const channel = interaction.guild.channels.cache.get(voiceid)
      if (!isNaN(newlimit) && newlimit < 100){
        channel.setUserLimit(newlimit)
        await interaction.reply({ content: ':white_check_mark: –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∏–º–∏—Ç –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!', ephemeral: true })
      } else {
        await interaction.reply({ content: '‚ö†Ô∏è –£–ø—Å.. –ö–∞–∂–µ—Ç—Å—è –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ —á–∏—Å–ª–æ –∏–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 99', ephemeral: true })
      }
    } else {
      interaction.reply({ content: '‚ö†Ô∏è –£–ø—Å.. –ö–∞–∂–µ—Ç—Å—è —É –≤–∞—Å –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã.', ephemeral: true })
    }
  } if (interaction.customId === 'lock'){
    const name = await db.get(`voice_${interaction.user.id}`)
    const channel = client.channels.cache.find(channel => channel.name == name)
    if (!channel){
      await interaction.reply({ content: '–£–ø—Å.. –ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ.', ephemeral: true })
    } else {
      const lockdb = await db.get(`voice_lock_${interaction.user.id}`)
      if (lockdb === 'true'){
        channel.permissionOverwrites.edit(interaction.guild.id, { 'CONNECT': false, 'SPEAK': false });
        await db.set(`voice_lock_${interaction.user.id}`, 'false')
        await interaction.reply({ content: '–ì–æ—Ç–æ–≤–æ! –í—ã –∑–∞–∫—Ä—ã–ª–∏ –∫–∞–Ω–∞–ª!', ephemeral: true });
      } else {
        channel.permissionOverwrites.edit(interaction.guild.id, { 'CONNECT': true, 'SPEAK': true });
        await db.set(`voice_lock_${interaction.user.id}`, 'true')
        await interaction.reply({ content: '–ì–æ—Ç–æ–≤–æ! –í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞–Ω–∞–ª!', ephemeral: true });
      }
    }
  } if (interaction.customId === 'eyes'){
    const name = await db.get(`voice_${interaction.user.id}`)
    const channel = client.channels.cache.find(channel => channel.name == name)
    if (!channel){
      await interaction.reply({ content: '–£–ø—Å.. –ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ.', ephemeral: true })
    } else {
      const eyesdb = await db.get(`voice_eyes_${interaction.user.id}`)
      if (eyesdb === 'true'){
        channel.permissionOverwrites.edit(interaction.guild.id, { 'VIEW_CHANNEL': false })
        await db.set(`voice_eyes_${interaction.user.id}`, 'false')
        await interaction.reply({ content: '–ì–æ—Ç–æ–≤–æ! –í—ã —Å–ø—Ä—è—Ç–∞–ª–∏ –∫–∞–Ω–∞–ª!', ephemeral: true });
      } else {
        channel.permissionOverwrites.edit(interaction.guild.id, { 'VIEW_CHANNEL': true });
        await db.set(`voice_eyes_${interaction.user.id}`, 'true')
        await interaction.reply({ content: '–ì–æ—Ç–æ–≤–æ! –í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞–Ω–∞–ª!', ephemeral: true });
      }
    }
  }
})

client.on('messageCreate', async (msg) => {
  if (msg.content.startsWith(`${prefix}—É–ø—Ä–∞–≤–ª—è—Ç—å_–±–µ–±—Ä`)){
    msg.delete()
    
    let embed = new Discord.EmbedConstructor()
    .setTitle('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏')
    .setDescription('–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.')
    .addFields(
      { name: '–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É:', value: `‚úèÔ∏è`, inline: false },
      { name: '–ó–∞–¥–∞—Ç—å –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã:', value: `üë•`, inline: false },
      { name: '–ó–∞–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É:', value: `üîí`, inline: false },
      { name: '–°–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É:', value: `üëÄ`, inline: false },
    )
    .setColor('#2f3136')

    let row = new MessageActionRow()
    .addComponents(
      new MessageButton()
        .setCustomId('rename')
        .setEmoji('‚úèÔ∏è')
        .setStyle('SECONDARY'),
      new MessageButton()
        .setCustomId('limit')
        .setEmoji('üë•')
        .setStyle('SECONDARY'),
      new MessageButton()
        .setCustomId('lock')
        .setEmoji('üîí')
        .setStyle('SECONDARY'),
      new MessageButton()
        .setCustomId('eyes')
        .setEmoji('üëÄ')
        .setStyle('SECONDARY'),
    )
    msg.channel.send({ embeds: [embed], components: [row] })
  }
})

client.on('interactionCreate', async i => {
  if (!i.isButton()) return
  if (i.customId === 'helper'){
    const Modals = new Modal()
			.setCustomId('helperModal')
			.setTitle('–ó–∞—è–≤–∫–∞ –≤ –•–µ–ª–ø–µ—Ä—ã');
    const rokiv = new TextInputBuilder()
		.setCustomId('rokiv')
		.setLabel("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?")
		.setStyle('SHORT');
		const rules = new TextInputBuilder()
			.setCustomId('rules')
			.setLabel("–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞?")
			.setStyle('SHORT');
    const rabota = new TextInputBuilder()
			.setCustomId('rabota')
			.setLabel("–ë—ã–ª –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ?")
			.setStyle('SHORT');
    const gramot = new TextInputBuilder()
			.setCustomId('gramot')
			.setLabel("–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é –≥—Ä–∞–º–º–æ—Ç–Ω–æ—Å—Ç—å?")
			.setStyle('SHORT');

		const firstActionRow = new MessageActionRow().addComponents(rokiv);
		const secondActionRow = new MessageActionRow().addComponents(rules);
    const thierdActionRow = new MessageActionRow().addComponents(rabota);
    const chetuActionRow = new MessageActionRow().addComponents(gramot);
		Modal.addComponents(firstActionRow, secondActionRow, thierdActionRow, chetuActionRow);

		await i.showModal(Modal);
  } if (i.customId === 'mened'){
    const Modals = new Modal()
			.setCustomId('menedModal')
			.setTitle('–ó–∞—è–≤–∫–∞ –≤ –ú—è—É–Ω–µ–¥–∂–µ—Ä—ã');
    const rokiv = new TextInputBuilder()
		.setCustomId('rokiv')
		.setLabel("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?")
		.setStyle('SHORT');
		const rules = new TextInputBuilder()
			.setCustomId('rules')
			.setLabel("–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞?")
			.setStyle('SHORT');
    const rabota = new TextInputBuilder()
			.setCustomId('rabota')
			.setLabel("–ë—ã–ª –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ?")
			.setStyle('SHORT');
    const gramot = new TextInputBuilder()
			.setCustomId('gramot')
			.setLabel("–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é –≥—Ä–∞–º–º–æ—Ç–Ω–æ—Å—Ç—å?")
			.setStyle('SHORT');

		const firstActionRow = new MessageActionRow().addComponents(rokiv);
		const secondActionRow = new MessageActionRow().addComponents(rules);
    const thierdActionRow = new MessageActionRow().addComponents(rabota);
    const chetuActionRow = new MessageActionRow().addComponents(gramot);
		Modal.addComponents(firstActionRow, secondActionRow, thierdActionRow, chetuActionRow);

		await i.showModal(Modal);
  }
})

client.on('interactionCreate', interaction => {
  if (interaction.customId === 'helperModal'){
	const rokiv = interaction.fields.getTextInputValue('rokiv');
	const rule = interaction.fields.getTextInputValue('rules');
  const rabota = interaction.fields.getTextInputValue('rabota');
	const gramot = interaction.fields.getTextInputValue('gramot');

  const embed = new Discord.EmbedConstructor()
  .setTitle(`${interaction.user.tag} –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É!`)
  .setDescription(`**–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?**\n\`${rokiv}\`\n**–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞?**\n\`${rule}\`\n**–ë—ã–ª –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ?**\n\`${rabota}\`\n**–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é –≥—Ä–∞–º–º–æ—Ç–Ω–æ—Å—Ç—å?**\n\`${gramot}\``)
	.setColor('#2f3136')
  
  client.channels.cache.get('979847249716707368').send({ embeds: [embed] });
  interaction.reply({ content: ':white_check_mark: –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ–µ.', ephemeral: true })
  } if (interaction.customId === 'menedModal'){
    const rokiv = interaction.fields.getTextInputValue('rokiv');
    const rule = interaction.fields.getTextInputValue('rules');
    const rabota = interaction.fields.getTextInputValue('rabota');
    const gramot = interaction.fields.getTextInputValue('gramot');
  
    const embed = new Discord.EmbedConstructor()
    .setTitle(`${interaction.user.tag} –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É!`)
    .setDescription(`**–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?**\n\`${rokiv}\`\n**–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞?**\n\`${rule}\`\n**–ë—ã–ª –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ?**\n\`${rabota}\`\n**–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é –≥—Ä–∞–º–º–æ—Ç–Ω–æ—Å—Ç—å?**\n\`${gramot}\``)
    .setColor('#2f3136')
    
    client.channels.cache.get('980176067279085668').send({ embeds: [embed] });
    interaction.reply({ content: ':white_check_mark: –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ–µ.', ephemeral: true })
    }
});

try { 
  client.login(token);
}catch{
  console.log('Error...')
  client.login(token);
}finally{
  return
}
